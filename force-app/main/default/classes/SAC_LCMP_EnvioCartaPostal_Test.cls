@isTest
public with sharing class SAC_LCMP_EnvioCartaPostal_Test {

    @TestSetup
    static void makeData(){

        User usuarioGeneral = SAC_TestDataFactory.crearUsuarioSACGeneral(1)[0];     
        SAC_DatabaseDML.insertDML(usuarioGeneral, false);  
        //Database.insert(usuarioGeneral);

        PermissionSet permiSet = [SELECT Id FROM PermissionSet WHERE Name = 'SAC_General'];
        PermissionSetAssignment permiSetAssi = new PermissionSetAssignment();
        permiSetAssi.AssigneeId = usuarioGeneral.Id;
        permiSetAssi.PermissionSetId = permiSet.Id;
        SAC_DatabaseDML.insertDML(permiSetAssi, false); 
        //Database.insert(permiSetAssi);


        System.runAs(usuarioGeneral){ 

            //Reclamacion
            Map<String, Object> camposRecl = new Map<String, Object>();
            camposRecl.put('Subject', 'TestRec');
            camposRecl.put('Status', 'SAC_001');
            camposRecl.put('SAC_NombreContacto__c', 'cuentaTest');

            Case reclamacion = SAC_TestDataFactory.crearCaso('Reclamacion', camposRecl);
            SAC_DatabaseDML.insertDML(reclamacion, false);
            //Database.insert(reclamacion);
            
            //Pretension
            Map<String, Object> camposPret = new Map<String, Object>();
            camposPret.put('SuppliedCompany', 'testPret');
            camposPret.put('Status', 'SAC_001');
            camposPret.put('SAC_Reclamacion__c', reclamacion.Id);

            Case pretension = SAC_TestDataFactory.crearCaso('Pretension', camposPret);
            SAC_DatabaseDML.insertDML(pretension, false);
            //Database.insert(pretension);

            // Plantilla
            EmailTemplate validEmailTemplate = new EmailTemplate(
                isActive = true, 
                Name = 'SAC_Redaccion',
                DeveloperName = 'SAC_Testeo',
                TemplateType = 'text', 
                HtmlValue = '<p>htmlValue<p>', 
                Body = 'Texted', 
                FolderId = UserInfo.getUserId()
            );
            SAC_DatabaseDML.insertDML(validEmailTemplate, false);
            //Database.insert(validEmailTemplate); 
        }
    }

    @isTest
    static void getInfoPostalTest() {
        User usuarioGeneral = [SELECT id FROM User WHERE username = 'usertest0@test.com.testSetup' and IsActive = true limit 1];
        Case caso = [SELECT Id FROM Case WHERE Subject = 'TestRec' LIMIT 1];
        SAC_LCMP_EnvioCartaPostal.WrappedInfo myInfo;
        System.runAs(usuarioGeneral){
            Test.startTest();
            myInfo = SAC_LCMP_EnvioCartaPostal.getInfoPostal(caso.Id);
            Test.stopTest();
        }
        System.assertNotEquals(null, myInfo, 'La obtenci贸n de datos postales ha fallado en la primera parte');
        System.assertEquals('cuentaTest', myInfo.nombreTitular, 'La obtenci贸n de datos postales ha fallado en la segunda parte');
    }   

    @isTest
    static void getInfoPostalPretensionTest() {
        User usuarioGeneral = [SELECT id FROM User WHERE username = 'usertest0@test.com.testSetup' and IsActive = true limit 1];
        Case caso = [SELECT Id FROM Case WHERE SuppliedCompany = 'testPret' LIMIT 1];
        SAC_LCMP_EnvioCartaPostal.WrappedInfo myInfo;

        System.runAs(usuarioGeneral){
            Test.startTest();
            myInfo = SAC_LCMP_EnvioCartaPostal.getInfoPostal(caso.Id);
            Test.stopTest();
        }
        System.assertNotEquals(null, myInfo, 'La obtenci贸n de datos postales ha fallado en la primera parte');
        System.assertEquals('cuentaTest', myInfo.nombreTitular, 'La obtenci贸n de datos postales ha fallado en la segunda parte');
    }   
}